#!/usr/bin/env bash

AUTO_VERSION=commit-count+git-revision+branch-unless-master
APP="phoenix_starter"

BUILD_HOST="localhost"
BUILD_USER="builder"
BUILD_AT="/tmp/edeliver/phoenix_starter/builds"

# STAGING_HOSTS="example.com"
# STAGING_USER="deploy"
# TEST_AT="/home/deploy/staging"

# PRODUCTION_HOSTS="cmacweb1.gq"  #$PHOENIX_STARTER_PROD_HOST # Replace this with the domain name of your server
# PRODUCTION_USER="deploy"
# DELIVER_TO="/home/deploy/app_release"

# For Phoenix projects, symlink prod.secret.exs to tmp source
# NOTE: Should not need this if not using prod.secret.exs for secrets (we will be using 12-factor app style instead) - put this note in README
# pre_erlang_get_and_update_deps() {
#   status "Linking to prod.secret.exs replacement config"
#   local _prod_secret_path="/home/deploy/prod.secret.exs"
#   if [ "$TARGET_MIX_ENV" = "prod" ]; then
#     __sync_remote "
#       ln -sfn '$_prod_secret_path' '$BUILD_AT/config/prod.secret.exs'
#     "
#   fi
# }

pre_erlang_clean_compile() {
  status "Install frontend dependencies"
  __sync_remote "
    [ -f ~/.profile ] && source ~/.profile
    echo $TARGET_MIX_ENV
    set -e
    cd '$BUILD_AT/assets'

    APP='$APP' MIX_ENV='$TARGET_MIX_ENV' yarn run build
  "

  status "Run phx.digest"
  __sync_remote "
    [ -f ~/.profile ] && source ~./profile
    set -e
    cd '$BUILD_AT'

    APP='$APP' MIX_ENV='$TARGET_MIX_ENV' $MIX_CMD phx.digest
  "
}